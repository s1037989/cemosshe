#!/bin/sh
# v11.11.08

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
# 	function library - please call with external script
#
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#############################################################################
# CeMoSSHe: CEntral MOnitoring in a Simple SHell Environment
#
# Copyright (C) 2009- Volker Tanger
# Copyright (C) 2011- Stefan Adams
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# For bug reports and suggestions or if you just want to talk to me please
# contact me at stefan@cogentinnovators.com
#
# Updates will be available at  http://www.cogent-it.com/software/cemosshe/
# please check there for updates prior to submitting patches!
#
# For list of changes please refer to the HISTORY file. Thanks.
#############################################################################

#---------------------------------------------------------
# init library and files
#---------------------------------------------------------

[ -z "$NETWAIT" ] && NETWAIT=5

TEMPDIR="/tmp"
CEMOSSHESERVER=${CEMOSSHESERVER:-http://velite.cogstonestl.com}
mkdir -p /var/run/cemosshe
CEMOSSHESESSION="-b /var/run/cemosshe/session -c /var/run/cemosshe/session"
[ -z "$CEMOSSHEDIR" ] && CEMOSSHEDIR=`dirname $0`
CEMOSSHEVERSION=`cut -d' ' -f2 $CEMOSSHEDIR/version`
CEMOSSHEDATA=`mktemp`

#############################################################################
### 	CeMoSShE internal functions
#############################################################################
function CemossheLog () {
    logger -s "$@"
}
function Cemosshe () {
    perl -MJSON::Any -MMIME::Base64 -e '$/=undef; print JSON::Any->to_json({map{@_=split/=/,$_,2;$_[0]=>$_[1]}@ARGV}), "\n", encode_base64(<STDIN>), "\n"' pg="$PROPERTYGROUP" "$@" >> $CEMOSSHEDATA
}
	
#---------------------------------------------------------
# Self-Check & Self-Locking
#---------------------------------------------------------
function CemossheSelfCheck () {
    CemossheLog "CemossheSelfCheck $0"

    if [ -f $TEMPDIR/cemosshe_lock.5 ]; then
        logger -t CeMoSShE -p ${FACILITY:-local0}.err "CeMoSShE in deadlock"
        rm -f $TEMPDIR/cemosshe_lock.*
        killall cemosshe
    fi

    if [ -f $TEMPDIR/cemosshe_lock.4 ]; then date > $TEMPDIR/cemosshe_lock.5; 
    elif [ -f $TEMPDIR/cemosshe_lock.3 ]; then date > $TEMPDIR/cemosshe_lock.4;
    elif [ -f $TEMPDIR/cemosshe_lock.2 ]; then date > $TEMPDIR/cemosshe_lock.3;
    elif [ -f $TEMPDIR/cemosshe_lock.1 ]; then date > $TEMPDIR/cemosshe_lock.2;
    elif [ -f $TEMPDIR/cemosshe_lock.0 ]; then date > $TEMPDIR/cemosshe_lock.1
    fi

    LOCKSEXIST=`ls $TEMPDIR/cemosshe_lock.? 2>/dev/null`
    if [ -n "$LOCKSEXIST" ]; then
        echo "CemossheSelfCheck failed: CeMoSShE locked.  "
        echo "Self-terminating.  Fix with rm -f $TEMPDIR/cemosshe_lock.?" 
        echo " "
        echo " "
        cat $TEMPDIR/cemosshelog_*
        date +"%Y-%m-%d %H:%M:%S - another CeMoSShE started and ran into lock"
        kill "$$"
    fi
    rm -f $TEMPDIR/cemosshelog_*
    CemossheLog "CemossheSelfCheck - successfully established lock"
    date > $TEMPDIR/cemosshe_lock.0

    for i in MIME::Base64 JSON JSON::Any Schedule::At; do
        perl -M$i -e exit 2>/dev/null || { echo Install CPAN Module $i; exit; }
    done
}

#---------------------------------------------------------
# Install / Uninstall the MoSSHe environment
#---------------------------------------------------------
function CemossheInstall () {
    CemossheLog "CemossheInstall"

    [ -e /etc/cemosshe-firstrun ] || date +"%Y-%m-%d" > /etc/cemosshe-firstrun
    if [ ! -e /etc/host-notes ]; then
        echo "System Notes for Display in CeMoSSHe" > /etc/host-notes
        echo "CeMoSSHe Firstrun: "`cat /etc/cemosshe-firstrun` >> /etc/host-notes
        [ -e /etc/issue ] && echo "Issue: "`cat /etc/issue` >> /etc/host-notes
        [ -e /etc/ubuntu-sealed ] && echo "Ubuntu Sealed: "`cat /etc/ubuntu-sealed` >> /etc/host-notes
        [ -e /etc/ubuntu-firstrun ] && echo "Ubuntu Firstrun: "`cat /etc/ubuntu-firstrun` >> /etc/host-notes
    fi
    mkdir -p /etc/cemosshe/functions /usr/local/etc/cemosshe/functions
    [ -e /etc/cron.daily/upgrade-cemosshe ] || ln -nsf "$CEMOSSHEDIR/cron/cron.daily_upgrade-cemosshe" /etc/cron.daily/upgrade-cemosshe
    [ -e /etc/cron.d/cemosshe ] || ln -nsf "$CEMOSSHEDIR/cron/cron.d_cemosshe" /etc/cron.d/cemosshe
    echo Installed CeMoSShE $CEMOSSHEVERSION
}
function CemossheUpgrade () {
    CemossheLog "CemossheUpgrade"

    [ "$1" == "clean" ] && rm -rf "$CEMOSSHEDIR"
    curl -A "CeMoSShE/$CEMOSSHEVERSION" $CEMOSSHESERVER/get | tar x -C "$CEMOSSHEDIR/.."
}
function CemossheUninstall () {
    CemossheLog "CemossheUninstall"

    [ -e "$CEMOSSHEDIR/uninstall" ] && rm -rf "$CEMOSSHEDIR/uninstall"
    mkdir -p "$CEMOSSHEDIR/uninstall"
    [ -e /etc/cemosshe-firstrun ] && mv /etc/cemosshe-firstrun /etc/host-notes "$CEMOSSHEDIR/uninstall"
    [ -e /etc/cemosshe ] && mv /etc/cemosshe "$CEMOSSHEDIR/uninstall/etc-cemosshe"
    [ -e /usr/local/etc/cemosshe ] && mv /usr/local/etc/cemosshe "$CEMOSSHEDIR/uninstall/usr-local-etc-cemosshe"
    [ -e /etc/cron.daily/upgrade-cemosshe ] && rm -f /etc/cron.daily/upgrade-cemosshe
    [ -e /etc/cron.d/cemosshe ] && rm -f /etc/cron.d/cemosshe
    rm -f $TEMPDIR/cemosshe_lock.*
    echo Uninstalled $CEMOSSHEVERSION
}
function CemossheRun () {
    CemossheLog "CemossheRun $1"

    CONF=${1:-cemosshe}
    mkdir -p /etc/cemosshe
    [ -f /etc/cemosshe/$CONF.conf ] || curl -o /etc/cemosshe/$CONF.conf -A "CeMoSShE/$CEMOSSHEVERSION" $CEMOSSHESESSION $CEMOSSHESERVER/conf/$CONF
    [ -f /etc/cemosshe/$CONF.conf ] || { echo /etc/cemosshe/$CONF.conf not found.  Aborting.; return; }
    CemossheSelfCheck
    . /etc/cemosshe/$CONF.conf
    rm -f $TEMPDIR/cemosshe_lock.*	# Always make this the last step
}

#---------------------------------------------------------
# PushResults method server:port username identityfile
#---------------------------------------------------------
function PushResults () {
    CemossheLog "PushResults $CEMOSSHESERVER"
    curl -A "$CEMOSSHEVERSION {\"sn\": \"$(/bin/hostname -f)\"}" -b /var/run/cemosshe/session -c /var/run/cemosshe/session -X POST --data-binary @$CEMOSSHEDATA $CEMOSSHESERVER | ScheduleAt
    rm -f $CEMOSSHEDATA
}

function ScheduleAt () {
    perl -MSchedule::At -MJSON -e '$/=undef; my $json = decode_json(<STDIN>||"{}"); my $at = delete $json->{at}; Schedule::At::add(%$_) foreach @$at; print encode_json($json)'
}

#############################################################################
###	MoSShE load functions
#############################################################################
for i in $CEMOSSHEDIR/functions/* /usr/local/etc/cemosshe/functions/* /etc/cemosshe/functions/*; do [ -x "$i" ] && . "$i"; done
