#!/bin/sh
# v11.11.08

. "$CEMOSSHEDIR/functions/localshows__lib.net-tools"

function PublicIPShow () {
    CemossheLog "$FUNCNAME $1"
    [ `which curl` ] && curl ${1:-http://checkip.cog-ent.com} 2>/dev/null | Cemosshe "Public IP"
}

function PstreeShow () {
    CemossheLog "$FUNCNAME $1"
    [ `which pstree` ] && pstree -capuA | Cemosshe "Processes (pstree -capuA)"
}

function IfconfigShow () {
    CemossheLog "$FUNCNAME $1"
    ifconfig | Cemosshe "NICs (ifconfig)"
}

function CemossheVerShow () {
    CemossheLog "$FUNCNAME $1"
    echo $CEMOSSHEVERSION | Cemosshe "$FUNCNAME"
}

function DfShow () {
    CemossheLog "$FUNCNAME $1"
    df -hP | grep ^/dev/ | Cemosshe "Partitions (df -hP)"
}

function RouteShow () {
    CemossheLog "$FUNCNAME $1"
    route -n | Cemosshe "Routes (route -n)"
}

function WShow () {
    CemossheLog "$FUNCNAME $1"
    w | Cemosshe "Logged in Users (w)"
}

function UnameShow () {
    CemossheLog "$FUNCNAME $1"
    uname -a | Cemosshe "System Information (uname -a)"
}

function DateShow () {
    CemossheLog "$FUNCNAME $1"
    date | Cemosshe "Current Timestamp"
}

function AtJobsShow () {
    CemossheLog "$FUNCNAME $1"
    for i in $(atq | cut -f1); do (atq | egrep "^$i"; echo " - "; at -c $i | tail -2 | head -1); done | Cemosshe "AT Jobs (atq)"
}

function LspciShow () {
    CemossheLog "$FUNCNAME $1"
    mkdir -p "$DATADIR/cache"
    if [ `date +%H` -eq 1 ]; then
        [ `which lspci` ] && lspci | tee "$DATADIR/cache/lspci.txt"
    elif [ -e "$DATADIR/cache/lspci.txt" ]; then
        cat "$DATADIR/cache/lspci.txt"
    else
	echo "lspci Built Daily"
    fi | Cemosshe "PCI Device (lspci)"
}

function LshwShow () {
    CemossheLog "$FUNCNAME $1"
    mkdir -p "$DATADIR/cache"
    if [ `date +%H` -eq 1 ]; then
        [ `which lshw` ] && lshw | tee "$DATADIR/cache/lshw.txt"
    elif [ -e "$DATADIR/cache/lshw.txt" ]; then
        cat "$DATADIR/cache/lshw.txt"
    else
	echo "lshw Built Daily"
    fi | Cemosshe "Hardware List (lshw)"
}

function PackagesShow () {
    CemossheLog "$FUNCNAME $1"
    mkdir -p "$DATADIR/cache"
    PKG=
    if [ `date +%H` -eq 1 ]; then
        if [ `which rpm` ]; then
            PKG="rpm -qa"
            rpm -qa
        elif [ `which dpkg-query` ]; then
            PKG="dpkg-query -l"
            dpkg-query -l
        fi | tee "$DATADIR/cache/packages.txt"
    elif [ -e "$DATADIR/cache/packages.txt" ]; then
        cat "$DATADIR/cache/packages.txt"
    else
	echo "Package List Built Daily"
    fi | Cemosshe "Package List ($PKG)"
}

function UptimeShow () {
    CemossheLog "$FUNCNAME $1"
    uptime | Cemosshe "Uptime"
}

function FileShow () {
    CemossheLog "$FUNCNAME $1"
    for i in "$@"; do cat $i | Cemosshe "File $i"; done
}

function FreeShow () {
    CemossheLog "$FUNCNAME $1"
    free | Cemosshe "Memory Free (free)"
}

function NetstatShow () {
    CemossheLog "$FUNCNAME $1"
    netstat -tulpen | Cemosshe "Listening Ports (netstat -tulpen)"
}

function LastLoginShow () {
    CemossheLog "$FUNCNAME $1"
    last -1 | Cemosshe "Last Login"
}

function HostNotesShow () {
    CemossheLog "$FUNCNAME $1"
    [ -f /etc/host-notes ] && cat /etc/host-notes | Cemosshe "Host Notes"
}

function SysInfoShow () {
    CemossheLog "$FUNCNAME $1"
    if [ `which landscape-sysinfo` ]; then
        # Ubuntu
        if [ $(echo "`cut -f1 -d ' ' /proc/loadavg` < 1.0" | bc) -eq 1 ]; then
            STATUS1=INFO ; STATUS2=0
            landscape-sysinfo --exclude-sysinfo-plugins=LandscapeLink
        else
            STATUS1=ALERT ; STATUS2=0
            echo "System information disabled due to load higher than 1"
        fi | Cemosshe "System Information" "$STATUS1" "$STATUS2"
    fi
}

function IsVirtualShow () {
    CemossheLog "$FUNCNAME $1"
    [ `which dmidecode` ] && dmidecode | egrep -i 'Product Name: VMware' | Cemosshe "Virtual? (dmidecode)"
}

function SSHShow () {
    CemossheLog "$FUNCNAME $1"
    [ -e /etc/ssh/publicport ] && . /etc/ssh/publicport
    [ -e /root/.ssh/authorized_keys ] && cut -d' ' -f3 /root/.ssh/authorized_keys | Cemosshe "Installed SSH Keys for root on port ${PUBLICPORT:-N/A}"
}
